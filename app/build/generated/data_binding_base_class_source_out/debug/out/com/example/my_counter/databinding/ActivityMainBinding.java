// Generated by view binder compiler. Do not edit!
package com.example.my_counter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.my_counter.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button decBtn;

  @NonNull
  public final Button incBtn;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView qty;

  @NonNull
  public final Button sendBackButton;

  @NonNull
  public final TextView textView;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button decBtn,
      @NonNull Button incBtn, @NonNull LinearLayout linearLayout, @NonNull TextView qty,
      @NonNull Button sendBackButton, @NonNull TextView textView) {
    this.rootView = rootView;
    this.decBtn = decBtn;
    this.incBtn = incBtn;
    this.linearLayout = linearLayout;
    this.qty = qty;
    this.sendBackButton = sendBackButton;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.decBtn;
      Button decBtn = rootView.findViewById(id);
      if (decBtn == null) {
        break missingId;
      }

      id = R.id.incBtn;
      Button incBtn = rootView.findViewById(id);
      if (incBtn == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.qty;
      TextView qty = rootView.findViewById(id);
      if (qty == null) {
        break missingId;
      }

      id = R.id.send_back_button;
      Button sendBackButton = rootView.findViewById(id);
      if (sendBackButton == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, decBtn, incBtn, linearLayout, qty,
          sendBackButton, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
